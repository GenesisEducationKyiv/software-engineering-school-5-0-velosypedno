version: '3'

tasks:
  default:
    desc: List available tasks
    cmds:
      - go-task --list-all

  lint:
    desc: Run local linter config 
    cmds:
      - golangci-lint run

  copy:env:
    desc: Copy default env vars
    cmds:
      - cp .env.sample .env
    silent: false

  copy:env:optional:
     desc: Ensure .env exists
     cmds:
      - |
        if [ ! -f .env ]; then
          echo ".env not found, copying from .env.sample"
          cp .env.sample .env
        else
          echo ".env already exists"
        fi

  run:debug:
    desc: Run notifier in debug mode
    dotenv: [".env"]
    cmds:
      - task: copy:env:optional
      - go run cmd/main.go
    env:
      LOG_DIR: ./logs

  install:
    desc: Install dependencies
    cmds:
      - task: install:linter

  install:linter:
    desc: Install linter
    cmds:
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.1.6

  test:
    desc: Run all tests
    cmds:
      - task: test:integration
  
  test:integration:
    desc: Run integration tests
    dotenv: [".env.sample"]
    env:
      SMTP_PORT: 1025
      RABBITMQ_PORT: 5674
      RABBITMQ_HOST: localhost
      SMTP_HOST: localhost
      EMAIL_FROM: testuser@example.com
      TEMPLATES_DIR: ../../internal/templates
      HTTP_HOST: localhost
      HTTP_PORT: 8089
      LOG_DIR: ./logs
    cmds:
      - task: copy:env:optional
      - docker compose -f docker-compose.test.yml up -d
      - defer: docker compose -f docker-compose.test.yml down
      - go test ./... -v -tags=integration
