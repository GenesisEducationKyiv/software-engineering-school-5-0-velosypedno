name: GO

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: './go.mod'

    - name: Install go-task
      uses: arduino/setup-task@v2
      with:
        version: 3.43.x

    - name: Install Linter
      run: task install

    - name: Run linter
      run: task lint:remote -v
  
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: './go.mod'

    - name: Install go-task
      uses: arduino/setup-task@v2
      with:
        version: 3.43.x
    
    - name: Run tests
      run: task test

  migrations:
    name: Migrations
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres_pass
          POSTGRES_DB: weather
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: './go.mod'

    - name: Install go-task
      uses: arduino/setup-task@v2
      with:
        version: 3.43.x

    - name: Install migrator
      run: task install:migrator

    - name: Wait for postgres
      run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            sleep 1
          done

    - name: Run migrations
      run: migrate -database "postgres://postgres:postgres_pass@localhost:5432/weather?sslmode=disable" -path db/migrations up

          