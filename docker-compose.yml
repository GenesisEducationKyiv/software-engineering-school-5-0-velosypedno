x-db-env: &db-env
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_NAME: ${DB_NAME}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}
  DB_DRIVER: ${DB_DRIVER} 

x-smtp-env: &smtp-env
  SMTP_HOST: ${SMTP_HOST}
  SMTP_PORT: ${SMTP_PORT}
  SMTP_USER: ${SMTP_USER}
  SMTP_PASS: ${SMTP_PASS}
  EMAIL_FROM: ${EMAIL_FROM}

x-redis-env: &redis-env
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PORT: ${REDIS_PORT}
  REDIS_PASSWORD: ${REDIS_PASSWORD}

x-app-env: &app-env
  API_PORT: ${API_PORT}
  TEMPLATES_DIR: ${TEMPLATES_DIR}

  FREE_WEATHER_API_KEY: ${FREE_WEATHER_API_KEY}
  WEATHER_API_BASE_URL: ${WEATHER_API_BASE_URL}

  TOMORROW_WEATHER_API_KEY: ${TOMORROW_WEATHER_API_KEY}
  TOMORROW_API_BASE_URL: ${TOMORROW_API_BASE_URL}

  VISUAL_CROSSING_API_KEY: ${VISUAL_CROSSING_API_KEY}
  VISUAL_CROSSING_API_BASE_URL: ${VISUAL_CROSSING_API_BASE_URL}
services:
  postgres:
    image: postgres:17.5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data     
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 4
    restart: unless-stopped
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 4

  migrator:
    build: .
    environment:
      <<: *db-env
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["task", "migrate:up"]
    restart: "no"
  api:
    build: .
    ports:
      - "8080:8080"
    environment:
      <<: [*db-env, *smtp-env, *app-env, *redis-env]
    depends_on:
      migrator:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    entrypoint: ["/app/bin/api"]
    restart: unless-stopped

  
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped

volumes:
  postgres-data:
  prometheus-data: